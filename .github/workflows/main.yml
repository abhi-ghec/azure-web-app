name: Deploy ASP.NET CORE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: abhigithubapp
  AZURE_WEBAPP_PATH: '.'
  DOTNET_VERSION: '6.0.300'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: SETUP .NET CORE
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: dotnet build + publish
        run: |
          dotnet build --configuration release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PATH }}/publish'
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: WebApp.${{github.sha}}.${{ github.run_number }}
          path: '${{ env.AZURE_WEBAPP_PATH }}/publish'
      
  DeployToDev:
       name: Deploy to Dev
       if: github.event_name == 'pull_request'
       needs: [build]
       runs-on: ubuntu-latest
       environment:
        name: Development
       steps:

        - name: Login via Azure CLI to Dev
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: Download Build Artifacts
          uses: actions/download-artifact@v3
          with:
            name: WebApp.${{github.sha}}.${{ github.run_number }}
            path: '${{ env.AZURE_WEBAPP_PATH }}/publish'
        - name: Deploy
          uses: azure/webapps-deploy@v2
          with:
           app-name: ${{ env.AZURE_WEBAPP_NAME }}
           package: '${{ env.AZURE_WEBAPP_PATH }}/publish'
  
  DeployToStaging:
       name: Deploy to Staging
       if: github.event.ref == 'refs/heads/main'
       needs: [build]
       runs-on: ubuntu-latest
       environment:
        name: Staging
       steps:

        - name: Login via Azure CLI to Dev
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: Download Build Artifacts
          uses: actions/download-artifact@v3
          with:
            name: WebApp.${{github.sha}}.${{ github.run_number }}
            path: '${{ env.AZURE_WEBAPP_PATH }}/publish'
        - name: Deploy
          uses: azure/webapps-deploy@v2
          with:
           app-name: ${{ env.AZURE_WEBAPP_NAME }}
           package: '${{ env.AZURE_WEBAPP_PATH }}/publish'
  
  DeployToProd:
       name: Deploy to Production
       needs: [DeployToStaging]
       runs-on: ubuntu-latest
       environment:
        name: Production
       steps:

        - name: Login via Azure CLI to Dev
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: Download Build Artifacts
          uses: actions/download-artifact@v3
          with:
            name: WebApp.${{github.sha}}.${{ github.run_number }}
            path: '${{ env.AZURE_WEBAPP_PATH }}/publish'
        - name: Deploy
          uses: azure/webapps-deploy@v2
          with:
           app-name: ${{ env.AZURE_WEBAPP_NAME }}
           package: '${{ env.AZURE_WEBAPP_PATH }}/publish'
  Publish:
       runs-on: ubuntu-latest
       needs: [DeployToProd]
       steps:
        - name: Create release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.github_token }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.run_number }}
            release_name: Azure Web App Release ${{ github.run_number }}
            body: New release for ${{ github.sha }}. Release notes placeholder
            draft: false
            prerelease: false
  
        - name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: WebApp.${{github.sha}}.${{ github.run_number }}
            path: '${{ env.AZURE_WEBAPP_PATH }}/publish'
        - name: Upload release asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.github_token }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: '${{ env.AZURE_WEBAPP_PATH }}/publish'
            asset_name: sWebApp.${{github.sha}}.${{ github.run_number }}
            asset_content_type: application/zip
